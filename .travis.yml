sudo: required
language: cpp
dist: focal

matrix:
  include:
    - compiler: gcc
      os: linux
      env:
        - COMPILER=g++-9
        - COMPILER_PACKAGE=g++-9
        - COMPILER_NAME=gcc-9
    - compiler: gcc
      os: linux
      addons:
      env:
        - COMPILER=g++-10
        - COMPILER_PACKAGE=g++-10
        - COMPILER_NAME=gcc-10
    - compiler: clang
      os: linux
      compiler: clang
      env:
        - COMPILER=clang++-10
        - COMPILER_PACKAGE=clang-10
        - COMPILER_NAME=clang-10
    - compiler: clang
      os: linux
      compiler: clang
      env:
        - COMPILER=clang++-11
        - COMPILER_PACKAGE=clang-11
        - COMPILER_NAME=clang-11
    - os: osx
      compiler: clang
      env:
        - COMPILER=clang++
        - COMPILER_PACKAGE=clang
        - COMPILER_NAME=clang

install:
  - "export CXX=$COMPILER"
  - "if [ $TRAVIS_OS_NAME = 'linux' ]; then sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y; fi"
  - "if [ $TRAVIS_OS_NAME = 'linux' ]; then sudo apt-get update -q; fi"
  - "if [ $TRAVIS_OS_NAME = 'linux' ]; then sudo apt-get install -y --force-yes libboost-all-dev libbz2-dev cmake cmake-data python3-numpy $COMPILER_PACKAGE; fi"

script:
  - "mkdir build"
  - "cd build"
  - "if [ $TRAVIS_OS_NAME = 'osx' ]; then cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=x86_64 -DPACKAGE_SUFFIX=-OSX-amd64-${COMPILER_NAME}; fi"
  - "if [ $TRAVIS_OS_NAME = 'linux' ]; then cmake .. -DCMAKE_PREFIX_PATH=$INSTPRF -DCMAKE_BUILD_TYPE=Release -DPACKAGE_SUFFIX=-ubuntu20.04-amd64-${COMPILER_NAME}; fi"
  - "cmake --build . --config Release -- -j2"
  - "cpack --verbose -G ZIP"
  - "cpack --verbose"
  # Unit testing
  - "CTEST_OUTPUT_ON_FAILURE=1 ctest --build-config $CONFIG -j2"
  - "cd .."

before_deploy:
  - "if [ $TRAVIS_OS_NAME = 'linux' ]; then export RELEASE_PKG_FILE=$(ls build/*.deb); fi"
  - "if [ $TRAVIS_OS_NAME = 'osx' ]; then export RELEASE_PKG_FILE=$(ls build/dynamomd-*.tar.gz); fi"
  - export RELEASE_ZIP_FILE=$(ls build/*.zip);
  - echo "Exporting $RELEASE_PKG_FILE to github"
  - echo "Exporting $RELEASE_ZIP_FILE to github"
  
deploy:
  provider: releases
  api_key:
    secure: "Xc8dv5gl4qSeLMKotCp9+TE0SATxqHx9cz3NcThO56IGJxioONDi0xo0Vz2HSZ2eMDWxeDRdIxWvFzLiIb3Do0vX7/Z9c73f3UhNCt+5xfzgB60/TOmF8ez34CbZXPyxGyRGhOdTftmjPPalb1Ma1lvupUtHAsqA8m7YjOeddGyRR7m5TlWTxYbC134igzOF6zfdb0w7U1bsD7a26sItyDQhy41a4TK3iTNk6XE1bIxPW3gyZP1FFE7l32G4mKFpTEm1XNwozCFNFcEH32FbNwXneHeNvTJDaKDhikUuJCTGIElzv6ARNfVRmLvO3IINFM4XmA3nNeodgkoEaDFh6eHPZOhaJUrU0WaFpEAvwGmCoIWrDokRQo37fNQqb0fFqmvqvObJPRhejPKncUs6tn/9b8l1Ssu02VNZbcmzwXvtIjBP/S39KHZD8X3Au/89sCPzv3GQB9n2k+kTAcMY2Dyk/u7zjEkx9ugOsaOp830SCpNg1oeC+DkGhJEqxMBRc7bxC8R893TUiiEfdlRm3NEGmbj/vsTYZrA84OvwkbfXJiTF8rr/SeyEhF21hfqxElu4PQZn379fSLQWRIlrQkDSduLs3/V/uS6gT1vovaOq8rMm8tGUAit9VMkAJtQ6TjpNz8RvsSFOOtv5ZiaouHxmpAdFyqXgWzUE1edBlbM="
  file:
    - "${RELEASE_PKG_FILE}"
    - "${RELEASE_ZIP_FILE}"
  on:
    tags: true
  skip_cleanup: true
